name: Docker Image CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # 수동으로 워크플로우를 실행할 수 있는 옵션
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
    # 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3
      
    # Docker Buildx 설정 (멀티 플랫폼 빌드 지원)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    # GitHub Container Registry(GHCR) 로그인
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    # 빌드 시간 기반 태그 생성
    - name: Generate build timestamp
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
        
    # 이미지 이름을 소문자로 변환 (GHCR 요구사항)
    - name: Prepare image name
      id: prep
      run: |
        echo "image=$(echo ghcr.io/${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
        
    # Docker 이미지 빌드 및 푸시
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: |
          ${{ steps.prep.outputs.image }}:latest
          ${{ steps.prep.outputs.image }}:${{ github.sha }}
          ${{ steps.prep.outputs.image }}:${{ steps.timestamp.outputs.timestamp }}
        cache-from: type=registry,ref=${{ steps.prep.outputs.image }}:latest
        cache-to: type=inline
        
    # 빌드 결과 정보 출력
    - name: Image digest
      run: echo ${{ steps.build.outputs.digest }}
